/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package finalOdevi;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DUMAN
 */
public class frmRezervasyon extends javax.swing.JFrame {

    /**
     * Creates new form frmRezervasyon
     */
    DefaultTableModel model;
    public frmRezervasyon() throws ClassNotFoundException {
        initComponents();
        model = (DefaultTableModel)tblRezervasyon.getModel();
        try {
            ArrayList<Rezervasyon> rezervasyonlar = getRezervasyonlar();
            for(Rezervasyon r : rezervasyonlar){
                Object[] row = {r.getRezervasyonID(),r.getMusteriAd(),r.getMusteriSoyad(),r.getTelefon(),r.getMasaID(),r.getRezervasyonTarihi(),r.getRezervasyonSaati(),r.getDurum()};
                model.addRow(row);
            }
        } catch (SQLException ex) {
            
        }
    }
    
    
    public ArrayList<Rezervasyon> getRezervasyonlar() throws SQLException, ClassNotFoundException{
        Connection connection = null;
        DbHelper dbHelper = new DbHelper();
        Statement statement = null;
        ResultSet resultSet;
        ArrayList<Rezervasyon> rezervasyonlar = null;
        try{
            connection = dbHelper.getConnection();
            statement = connection.createStatement();
            resultSet = statement.executeQuery("select * from rezervasyon_gorunum;");
            rezervasyonlar = new ArrayList<Rezervasyon>();
            while(resultSet.next()){
                rezervasyonlar.add(new Rezervasyon(
                        resultSet.getInt("rezervasyon_id"),
                        resultSet.getString("musteri_ad"),
                        resultSet.getString("musteri_soyad"),
                        resultSet.getString("musteri_telefon"),
                        resultSet.getInt("masa_no"),
                        resultSet.getString("tarih"),
                        resultSet.getString("saat"),
                        resultSet.getString("durum")
                    ));
            }
        }catch(SQLException exception){
            dbHelper.showErrorMessage(exception);
        }finally{
            statement.close();
            connection.close();
        }
        return rezervasyonlar;
    }
    
    public int getMusteriID(String ad) throws SQLException, ClassNotFoundException{
        Connection connection = null;
        DbHelper dbHelper = new DbHelper();
        Statement statement = null;
        ResultSet resultSet;
        int id = 0;
        try{
            connection = dbHelper.getConnection();
            statement = connection.createStatement();
            resultSet = statement.executeQuery("select * from musteriler where ad = '"+ad+"'");
            while(resultSet.next()){
                id = resultSet.getInt("id");
            }
        }catch(SQLException exception){
            dbHelper.showErrorMessage(exception);
        }finally{
            statement.close();
            connection.close();
        }
        return id;
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlRezervasyonlar = new javax.swing.JScrollPane();
        tblRezervasyon = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtAd = new javax.swing.JTextField();
        txtSoyad = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        frmTarih = new javax.swing.JFormattedTextField();
        frmTelefon = new javax.swing.JFormattedTextField();
        frmSaat = new javax.swing.JFormattedTextField();
        btnOlustur = new javax.swing.JButton();
        btnGuncelle = new javax.swing.JButton();
        btnSil = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblRezervasyon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Ad", "Soyad", "Telefon", "Masa No", "Tarih", "Saat", "Durum"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblRezervasyon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblRezervasyonMouseClicked(evt);
            }
        });
        pnlRezervasyonlar.setViewportView(tblRezervasyon);
        if (tblRezervasyon.getColumnModel().getColumnCount() > 0) {
            tblRezervasyon.getColumnModel().getColumn(0).setResizable(false);
            tblRezervasyon.getColumnModel().getColumn(1).setResizable(false);
            tblRezervasyon.getColumnModel().getColumn(2).setResizable(false);
            tblRezervasyon.getColumnModel().getColumn(3).setResizable(false);
            tblRezervasyon.getColumnModel().getColumn(4).setResizable(false);
            tblRezervasyon.getColumnModel().getColumn(5).setResizable(false);
            tblRezervasyon.getColumnModel().getColumn(6).setResizable(false);
            tblRezervasyon.getColumnModel().getColumn(7).setResizable(false);
        }

        jLabel1.setFont(new java.awt.Font("Algerian", 1, 24)); // NOI18N
        jLabel1.setText("Restoran Rezervasyon Formu");

        jLabel2.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jLabel2.setText("Mevcut Rezervasyonlar");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Ad:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Soyad:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Telefon:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Tarih:");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Saat:");

        try {
            frmTarih.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-##-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            frmTelefon.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-###-##-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            frmSaat.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSoyad)
                    .addComponent(txtAd)
                    .addComponent(frmTarih)
                    .addComponent(frmTelefon, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                    .addComponent(frmSaat))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtAd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSoyad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(frmTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(frmTarih, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(frmSaat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        btnOlustur.setText("Rezervasyon Oluştur");
        btnOlustur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOlusturActionPerformed(evt);
            }
        });

        btnGuncelle.setText("Rezervasyon Güncelle");
        btnGuncelle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuncelleActionPerformed(evt);
            }
        });

        btnSil.setText("Rezervasyon Sil");
        btnSil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSilActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setText("Silmek İstediğinizi Seçebilirsiniz");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(104, 104, 104))
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(129, 129, 129))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(pnlRezervasyonlar)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(btnSil, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(82, 82, 82)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnOlustur, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnGuncelle, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 119, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnOlustur, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(btnGuncelle, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSil, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlRezervasyonlar, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOlusturActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOlusturActionPerformed
        String ad = txtAd.getText();
        String soyad = txtSoyad.getText();
        String telefon = frmTelefon.getText().replace("-", "");
        String tarih = frmTarih.getText();
        String saat = frmSaat.getText();
        String durum = "aktif";
        Random random = new Random();
        Connection connection = null;
        DbHelper dbHelper = new DbHelper();
        Statement statement = null;
        try {
            int masaID = random.nextInt(10) + 1;
            connection = dbHelper.getConnection();
            statement = connection.createStatement();
            if(!ad.isEmpty() && !soyad.isEmpty()){
                String sql = "INSERT INTO musteriler (ad, soyad, telefon) VALUES ('"+ad+"','"+soyad+"','"+telefon+"')";
                statement.executeUpdate(sql);
                int id = getMusteriID(ad);
                String ekle = "INSERT INTO rezervasyonlar (musteri_id, masa_id, rezervasyon_tarihi, rezervasyon_saati, durum) VALUES ('"+id+"','"+masaID+"','"+tarih+"','"+saat+"','"+durum+"')";
                statement.executeUpdate(ekle);
                JOptionPane.showMessageDialog(rootPane, "Rezervasyon Oluşturuldu!");
                ArrayList<Rezervasyon> rezervasyonlar = getRezervasyonlar();
                model.setRowCount(0);
                for(Rezervasyon r : rezervasyonlar){
                    Object[] row = {r.getRezervasyonID(),r.getMusteriAd(),r.getMusteriSoyad(),r.getTelefon(),r.getMasaID(),r.getRezervasyonTarihi(),r.getRezervasyonSaati(),r.getDurum()};
                    model.addRow(row);
                }
            }else{
                JOptionPane.showMessageDialog(rootPane, "Lütfen Tüm Alanları Doldurunuz!");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Verileri Doğru Girdiğinizden Emin Olun!");
        }finally{
            try {
                statement.close();
                connection.close();
            } catch (SQLException ex) {
            }
        }
    }//GEN-LAST:event_btnOlusturActionPerformed

    private void tblRezervasyonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblRezervasyonMouseClicked
        if (tblRezervasyon.getSelectedRowCount()>0) {
            int seciliSatir=tblRezervasyon.getSelectedRow();
            txtAd.setText(tblRezervasyon.getValueAt(seciliSatir, 1).toString());
            txtSoyad.setText(tblRezervasyon.getValueAt(seciliSatir, 2).toString());
            frmTelefon.setText(tblRezervasyon.getValueAt(seciliSatir, 3).toString());
            frmTarih.setText(tblRezervasyon.getValueAt(seciliSatir, 5).toString());
            frmSaat.setText(tblRezervasyon.getValueAt(seciliSatir, 6).toString());
        }
    }//GEN-LAST:event_tblRezervasyonMouseClicked

    private void btnSilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSilActionPerformed
        Connection connection = null;
        DbHelper dbHelper = new DbHelper();
        Statement statement = null;
        try {
            connection = dbHelper.getConnection();
            statement = connection.createStatement();
            if (tblRezervasyon.getSelectedRowCount() > 0) {
                int seciliSatir=tblRezervasyon.getSelectedRow();
                int id = getMusteriID(tblRezervasyon.getValueAt(seciliSatir, 1).toString());
                String sql = "delete from rezervasyonlar where id = '"+tblRezervasyon.getValueAt(seciliSatir, 0)+"';";
                statement.executeUpdate(sql);
                String sql2 = "delete from musteriler where id = '"+id+"';";
                statement.executeUpdate(sql2);
                JOptionPane.showMessageDialog(rootPane, "Rezervasyon İptal Edildi!");
                ArrayList<Rezervasyon> rezervasyonlar = getRezervasyonlar();
                model.setRowCount(0);
                for(Rezervasyon r : rezervasyonlar){
                    Object[] row = {r.getRezervasyonID(),r.getMusteriAd(),r.getMusteriSoyad(),r.getTelefon(),r.getMasaID(),r.getRezervasyonTarihi(),r.getRezervasyonSaati(),r.getDurum()};
                    model.addRow(row);
                }
            }else{
                JOptionPane.showMessageDialog(rootPane, "Rezervasyon Seçimi Yapmanız Gerekiyor!");
            }  
        } catch (Exception e) {
            
        }finally{
            try {
                statement.close();
                connection.close();
            } catch (SQLException ex) {
                
            }
        }
    }//GEN-LAST:event_btnSilActionPerformed

    private void btnGuncelleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuncelleActionPerformed
        String ad = txtAd.getText();
        String soyad = txtSoyad.getText();
        String telefon = frmTelefon.getText().replace("-", "");
        String tarih = frmTarih.getText();
        String saat = frmSaat.getText();
        Connection connection = null;
        DbHelper dbHelper = new DbHelper();
        Statement statement = null;
        try {
            connection = dbHelper.getConnection();
            statement = connection.createStatement();
            Random random = new Random();
            int masaID = random.nextInt(10) + 1;
            if (tblRezervasyon.getSelectedRowCount() > 0) {
                int seciliSatir=tblRezervasyon.getSelectedRow();
                int id = getMusteriID(tblRezervasyon.getValueAt(seciliSatir, 1).toString());
                String sql = "update musteriler set ad = '"+ad+"', soyad = '"+soyad+"', telefon = '"+telefon+"' where id = '"+id+"';";
                statement.executeUpdate(sql);
                String update = "update rezervasyonlar set rezervasyon_tarihi = '"+tarih+"', rezervasyon_saati = '"+saat+"', durum = 'aktif' where id = '"+tblRezervasyon.getValueAt(seciliSatir, 0)+"';";
                statement.executeUpdate(update);
                JOptionPane.showMessageDialog(rootPane, "Rezervasyon Güncellendi!");
                ArrayList<Rezervasyon> rezervasyonlar = getRezervasyonlar();
                model.setRowCount(0);
                for(Rezervasyon r : rezervasyonlar){
                    Object[] row = {r.getRezervasyonID(),r.getMusteriAd(),r.getMusteriSoyad(),r.getTelefon(),r.getMasaID(),r.getRezervasyonTarihi(),r.getRezervasyonSaati(),r.getDurum()};
                    model.addRow(row);
                }
            }else{
                JOptionPane.showMessageDialog(rootPane, "Rezervasyon Seçimi Yapmanız Gerekiyor!");
            }
        } catch (Exception e) {
        }finally{
            try {
                statement.close();
                connection.close();
            } catch (SQLException ex) {
                
            }
        }
    }//GEN-LAST:event_btnGuncelleActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmRezervasyon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmRezervasyon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmRezervasyon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmRezervasyon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new frmRezervasyon().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(frmRezervasyon.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGuncelle;
    private javax.swing.JButton btnOlustur;
    private javax.swing.JButton btnSil;
    private javax.swing.JFormattedTextField frmSaat;
    private javax.swing.JFormattedTextField frmTarih;
    private javax.swing.JFormattedTextField frmTelefon;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane pnlRezervasyonlar;
    private javax.swing.JTable tblRezervasyon;
    private javax.swing.JTextField txtAd;
    private javax.swing.JTextField txtSoyad;
    // End of variables declaration//GEN-END:variables
}
